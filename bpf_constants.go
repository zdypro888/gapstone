/*
Gapstone is a Go binding for the Capstone disassembly library. For examples,
try reading the *_test.go files.

	Library Author: Nguyen Anh Quynh
	Binding Author: Ben Nagy
	License: BSD style - see LICENSE file for details
    (c) 2013 COSEINC. All Rights Reserved.

    THIS FILE WAS AUTO-GENERATED -- DO NOT EDIT!
	Command: ./genconst /Users/zdypro/Documents/projects/src/capstone/bindings/python/capstone
	2022-05-10T18:09:36+08:00

*/

package gapstone


// #include <stdlib.h>
// #include <capstone/capstone.h>
import "C"

// For Capstone Engine. AUTO-GENERATED FILE, DO NOT EDIT [bpf_const.py]
const (
	BPF_OP_INVALID = C.BPF_OP_INVALID
	BPF_OP_REG     = C.BPF_OP_REG
	BPF_OP_IMM     = C.BPF_OP_IMM
	BPF_OP_OFF     = C.BPF_OP_OFF
	BPF_OP_MEM     = C.BPF_OP_MEM
	BPF_OP_MMEM    = C.BPF_OP_MMEM
	BPF_OP_MSH     = C.BPF_OP_MSH
	BPF_OP_EXT     = C.BPF_OP_EXT
)

const (
	BPF_REG_INVALID = C.BPF_REG_INVALID
	BPF_REG_A       = C.BPF_REG_A
	BPF_REG_X       = C.BPF_REG_X
	BPF_REG_R0      = C.BPF_REG_R0
	BPF_REG_R1      = C.BPF_REG_R1
	BPF_REG_R2      = C.BPF_REG_R2
	BPF_REG_R3      = C.BPF_REG_R3
	BPF_REG_R4      = C.BPF_REG_R4
	BPF_REG_R5      = C.BPF_REG_R5
	BPF_REG_R6      = C.BPF_REG_R6
	BPF_REG_R7      = C.BPF_REG_R7
	BPF_REG_R8      = C.BPF_REG_R8
	BPF_REG_R9      = C.BPF_REG_R9
	BPF_REG_R10     = C.BPF_REG_R10
	BPF_REG_ENDING  = C.BPF_REG_ENDING
)

const (
	BPF_EXT_INVALID = C.BPF_EXT_INVALID
	BPF_EXT_LEN     = C.BPF_EXT_LEN
)

const (
	BPF_INS_INVALID = C.BPF_INS_INVALID
	BPF_INS_ADD     = C.BPF_INS_ADD
	BPF_INS_SUB     = C.BPF_INS_SUB
	BPF_INS_MUL     = C.BPF_INS_MUL
	BPF_INS_DIV     = C.BPF_INS_DIV
	BPF_INS_OR      = C.BPF_INS_OR
	BPF_INS_AND     = C.BPF_INS_AND
	BPF_INS_LSH     = C.BPF_INS_LSH
	BPF_INS_RSH     = C.BPF_INS_RSH
	BPF_INS_NEG     = C.BPF_INS_NEG
	BPF_INS_MOD     = C.BPF_INS_MOD
	BPF_INS_XOR     = C.BPF_INS_XOR
	BPF_INS_MOV     = C.BPF_INS_MOV
	BPF_INS_ARSH    = C.BPF_INS_ARSH
	BPF_INS_ADD64   = C.BPF_INS_ADD64
	BPF_INS_SUB64   = C.BPF_INS_SUB64
	BPF_INS_MUL64   = C.BPF_INS_MUL64
	BPF_INS_DIV64   = C.BPF_INS_DIV64
	BPF_INS_OR64    = C.BPF_INS_OR64
	BPF_INS_AND64   = C.BPF_INS_AND64
	BPF_INS_LSH64   = C.BPF_INS_LSH64
	BPF_INS_RSH64   = C.BPF_INS_RSH64
	BPF_INS_NEG64   = C.BPF_INS_NEG64
	BPF_INS_MOD64   = C.BPF_INS_MOD64
	BPF_INS_XOR64   = C.BPF_INS_XOR64
	BPF_INS_MOV64   = C.BPF_INS_MOV64
	BPF_INS_ARSH64  = C.BPF_INS_ARSH64
	BPF_INS_LE16    = C.BPF_INS_LE16
	BPF_INS_LE32    = C.BPF_INS_LE32
	BPF_INS_LE64    = C.BPF_INS_LE64
	BPF_INS_BE16    = C.BPF_INS_BE16
	BPF_INS_BE32    = C.BPF_INS_BE32
	BPF_INS_BE64    = C.BPF_INS_BE64
	BPF_INS_LDW     = C.BPF_INS_LDW
	BPF_INS_LDH     = C.BPF_INS_LDH
	BPF_INS_LDB     = C.BPF_INS_LDB
	BPF_INS_LDDW    = C.BPF_INS_LDDW
	BPF_INS_LDXW    = C.BPF_INS_LDXW
	BPF_INS_LDXH    = C.BPF_INS_LDXH
	BPF_INS_LDXB    = C.BPF_INS_LDXB
	BPF_INS_LDXDW   = C.BPF_INS_LDXDW
	BPF_INS_STW     = C.BPF_INS_STW
	BPF_INS_STH     = C.BPF_INS_STH
	BPF_INS_STB     = C.BPF_INS_STB
	BPF_INS_STDW    = C.BPF_INS_STDW
	BPF_INS_STXW    = C.BPF_INS_STXW
	BPF_INS_STXH    = C.BPF_INS_STXH
	BPF_INS_STXB    = C.BPF_INS_STXB
	BPF_INS_STXDW   = C.BPF_INS_STXDW
	BPF_INS_XADDW   = C.BPF_INS_XADDW
	BPF_INS_XADDDW  = C.BPF_INS_XADDDW
	BPF_INS_JMP     = C.BPF_INS_JMP
	BPF_INS_JEQ     = C.BPF_INS_JEQ
	BPF_INS_JGT     = C.BPF_INS_JGT
	BPF_INS_JGE     = C.BPF_INS_JGE
	BPF_INS_JSET    = C.BPF_INS_JSET
	BPF_INS_JNE     = C.BPF_INS_JNE
	BPF_INS_JSGT    = C.BPF_INS_JSGT
	BPF_INS_JSGE    = C.BPF_INS_JSGE
	BPF_INS_CALL    = C.BPF_INS_CALL
	BPF_INS_EXIT    = C.BPF_INS_EXIT
	BPF_INS_JLT     = C.BPF_INS_JLT
	BPF_INS_JLE     = C.BPF_INS_JLE
	BPF_INS_JSLT    = C.BPF_INS_JSLT
	BPF_INS_JSLE    = C.BPF_INS_JSLE
	BPF_INS_RET     = C.BPF_INS_RET
	BPF_INS_TAX     = C.BPF_INS_TAX
	BPF_INS_TXA     = C.BPF_INS_TXA
	BPF_INS_ENDING  = C.BPF_INS_ENDING
	BPF_INS_LD      = C.BPF_INS_LD
	BPF_INS_LDX     = C.BPF_INS_LDX
	BPF_INS_ST      = C.BPF_INS_ST
	BPF_INS_STX     = C.BPF_INS_STX
)

const (
	BPF_GRP_INVALID = C.BPF_GRP_INVALID
	BPF_GRP_LOAD    = C.BPF_GRP_LOAD
	BPF_GRP_STORE   = C.BPF_GRP_STORE
	BPF_GRP_ALU     = C.BPF_GRP_ALU
	BPF_GRP_JUMP    = C.BPF_GRP_JUMP
	BPF_GRP_CALL    = C.BPF_GRP_CALL
	BPF_GRP_RETURN  = C.BPF_GRP_RETURN
	BPF_GRP_MISC    = C.BPF_GRP_MISC
	BPF_GRP_ENDING  = C.BPF_GRP_ENDING
)
